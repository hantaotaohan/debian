# ------------------------------------------------------------------------------------------------------
# 设置终端颜色
# ------------------------------------------------------------------------------------------------------

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set-option -g -a terminal-overrides ",xterm-256color:Tc"
set-option -g default-terminal "screen-256color"

# ------------------------------------------------------------------------------------------------------
# 设置 prefix
# ------------------------------------------------------------------------------------------------------

# 设定第第一个 prefix
unbind-key C-b
set-option -g prefix C-f
bind-key f send-prefix

# Bind "C-a C-a" to send "C-a"
# 设定C-b C-b发送C-b
# bind-key C-b send-prefix

# 设定第二个 prefix
# set-option -g prefix2 Home

# ------------------------------------------------------------------------------------------------------
# 全局设置
# ------------------------------------------------------------------------------------------------------

# 使用vim键位设定
set-option -g mode-keys vi
set-option -g status-keys vi

# 开启鼠标模式
set-option -g mouse on

# tmux在转义后等待的时间（毫秒）
set-option -g escape-time 20

# 启用焦点设定
set-option -g focus-events on

# 居中状态栏
set -g status-justify "left" # left,centre,right          

# 历史文件设定
set-option -g history-limit 10000
set-option -g history-file ~/.tmux/tmuxhistory

# 开启活动通知
set-option -g monitor-activity off
set-option -g visual-activity off

# 索引页以一为起始(window)
set-option -g base-index 1

# 索引页以一为起始(pane)
set-option -g pane-base-index 1

# 重命名窗口以反映当前程序
set-option -g -w automatic-rename on

# 关闭windows时重新编号
set-option -g renumber-windows on

# 全局无响铃设定
set-option -g bell-action none

# ------------------------------------------------------------------------------------------------------
# Keymapping
# ------------------------------------------------------------------------------------------------------

# 重载tmux配置文件的快捷键
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# 映射 Alt + A 为 prefix + d
# bind-key -n M-d detach-client

# 映射 Alt + S 为 prefix + &
# bind-key -n M-x kill-window

# ------------------------------------------------------------------------------------------------------

# vim模式复制粘贴设定
bind-key v copy-mode 
bind-key -T copy-mode-vi 'Escape' send -X cancel
bind-key -T copy-mode-vi 'v' send-keys -X rectangle-toggle \; send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'Space' send-keys -X rectangle-toggle

# ------------------------------------------------------------------------------------------------------

# 回车新建 Pane
bind-key Enter split-window -h

# 删除键设置为切换下一个 Window
bind-key BSpace next-window

# Alt+Shift+L/J 切换 Pane 布局
bind-key M-J select-layout even-vertical
bind-key M-L  select-layout even-horizontal

# Shift+N 把 Pane 独立出来放到新的 windows 里
bind-key N break-pane

# 分割窗口
bind-key | split-window -h
bind-key \\ split-window -v

# 调整窗口大小
# bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
# bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
# bind -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
# bind -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

# 焦点窗口
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# ------------------------------------------------------------------------------------------------------

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ------------------------------------------------------------------------------------------------------

# Some extra key bindings to select higher numbered windows
#bind F1 selectw -t:10
#bind F2 selectw -t:11
#bind F3 selectw -t:12
#bind F4 selectw -t:13
#bind F5 selectw -t:14
#bind F6 selectw -t:15
#bind F7 selectw -t:16
#bind F8 selectw -t:17
#bind F9 selectw -t:18
#bind F10 selectw -t:19
#bind F11 selectw -t:20
#bind F12 selectw -t:21

# Change current pane to next window
#bind-key ! join-pane -h :1
#bind-key @ join-pane -h :2
#bind-key '#' join-pane -h :3
#bind-key '$' join-pane -h :4
#bind-key '%' join-pane -h :5
#bind-key '^' join-pane -h :6
#bind-key '&' join-pane -h :7
#bind-key '*' join-pane -h :8
#bind-key '(' join-pane -h :9
#bind-key ')' join-pane -h :10

# Some tweaks to the status line
# set -g status-right "%Y-%M-%d - %H:%M"
# set -g window-status-current-style "underscore"

# 禁止常规退出tmux
set -g remain-on-exit on
# 恢复remain-exit状态
bind-key R respawn-window
# 如果是最后一个窗口禁止退出
set-hook -g pane-died "if -F '#{&&:#{==:#{session_windows},1},#{==:#{window_panes},1}}' 'respawn-pane' 'kill-pane'"

# ------------------------------------------------------------------------------------------------------
# Tmux - Pluging
# ------------------------------------------------------------------------------------------------------

# TPM设定
set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'

# 插件列表
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# 其他插件
set -g @plugin 'https://hub.nuaa.cf/tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'https://hub.nuaa.cf/christoomey/vim-tmux-navigator'
set -g @plugin 'https://hub.nuaa.cf/tmux-plugins/tmux-yank'
set -g @plugin 'https://hub.nuaa.cf/brennanfee/tmux-paste'
# set -g @plugin 'https://hub.fastgit.xyz/odedlaz/tmux-onedark-theme'
# set -g @plugin 'https://hub.fastgit.xyz/tmux-plugins/tmux-resurrect'
# set -g @plugin 'https://hub.fastgit.xyz/tmux-plugins/tmux-continuum'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# 安装插件
run -b '$HOME/.tmux/plugins/tpm/tpm'

# 读取 theme
# run -b '$HOME/.config/tmux/onedark.tmux'

# Themes

set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#c5cdd9,bg=#404455"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#6cb6eb"
set -g status-style "none,bg=#333644"
set -g message-style "fg=#c5cdd9,bg=#404455"
set -g pane-border-style "fg=#404455"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none,fg=#6cb6eb,bg=#333644"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#c5cdd9,bg=#333644"
set -g status-left "#[fg=#2b2d37,bg=#6cb6eb] #S #[fg=#6cb6eb,bg=#404455,nobold,nounderscore,noitalics]#[fg=#c5cdd9,bg=#404455] %R #[fg=#404455,bg=#333644,nobold,nounderscore,noitalics]#{prefix_highlight} #[fg=#333644,bg=#333644,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#333644,bg=#333644,nobold,nounderscore,noitalics]#[fg=#404455,bg=#333644,nobold,nounderscore,noitalics]#[fg=#c5cdd9,bg=#404455] %Y-%m-%d #[fg=#6cb6eb,bg=#404455,nobold,nounderscore,noitalics]#[fg=#2b2d37,bg=#6cb6eb] #H "
setw -g window-status-format "#[fg=#333644,bg=#333644,nobold,nounderscore,noitalics]#[fg=#c5cdd9] #I #W #[fg=#333644,bg=#333644,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#333644,bg=#404455,nobold,nounderscore,noitalics]#[fg=#c5cdd9,bg=#404455] #I #W #F #[fg=#404455,bg=#333644,nobold,nounderscore,noitalics]"

# 插件设定 Onedark
set -g @onedark_widgets "#(date +%H:%M)"
set -g @onedark_time_format ""
set -g @onedark_date_format "%Y-%m-%d"
set -g @onedark_date_first true

# 插件设定 Highlight
set -g @prefix_highlight_prefix_prompt ' Wait '
set -g @prefix_highlight_copy_prompt ' Copy '
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_fg 'black' # default is 'colour231'
set -g @prefix_highlight_bg 'red'  # default is 'colour04'
set -g @prefix_highlight_output_prefix ''
set -g @prefix_highlight_output_suffix ''

# 插件设定 Yank
set -g @yank_selection 'clipboard' # 'primary' or 'secondary' or 'clipboard'

# 插件设定 Paste
set -g @paste_selection 'clipboard' # 'primary'  or 'secondary' or 'clipboard'

# 插件设定 Continuum
# set -g @continuum-boot 'on'
# set -g @continuum-restore 'on'
# set -g @continuum-save-interval '15'
# set -g status-right 'Continuum status: #{continuum_status}'

# vim:ft=tmux
