#!/bin/bash

# start or stop or restart
optype=$1

# 进程名称, 修改此处
PROGNAME='popup-dict'

if [ x"${optype}" = x ] ; then
    optype=start
fi

function start {
    # 进程数量
    prog_num=`ps -ef | grep $PROGNAME | grep -v grep | wc -l`
    if [ $prog_num -eq 0 ] ; then
        # echo "start $PROGNAME"
        nohup $PROGNAME > /dev/null 2>&1 &
        dunstify -i /usr/share/icons/Adwaita/32x32/places/folder.png -r 8888 normal "Popup-Dict \n\nEnable" 
    # else
        # echo "$PROGNAME is started"
    fi
}

function stop {
    # 进程数量
    prog_num=`ps -ef | grep $PROGNAME | grep -v grep | wc -l`
    if [ $prog_num -eq 0 ] ; then
      # echo "$PROGNAME is stopped"
      return
    fi
    
    # 查出所有进程 id
    prog_ids=`ps -ef | grep $PROGNAME | grep -v grep | awk '{print $2}'`
    
    for pid in $prog_ids;
    do
        kill -9 $pid;
    done
    dunstify -i /usr/share/icons/Adwaita/32x32/places/folder.png -r 8888 normal "Popup-Dict \n\nDisable" 
    # echo "stop $PROGNAME"
}

# case "$optype" in
#     start)
#         start
#         ;;
#     stop)
#         stop
#         ;;
#     restart)
#         stop
#         sleep 1
#         start
#         ;;
#     *)
#         echo "Only support start|stop|restart"
#         exit 1
# esac


#----------------------------------------------------
statefile=$HOME/.script.state

if [ -f "$statefile" ]; then
    . "$statefile"
fi

case $state in
    on) state=off ;;
    *)  state=on
esac

if [ "$state" == "off" ]; then
    start
elif [ "$state" == "on" ]; then 
    stop
fi

declare -p state >"$statefile"

#----------------------------------------------------
